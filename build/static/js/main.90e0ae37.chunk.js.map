{"version":3,"sources":["components/EntryForm.js","components/AddForm.js","components/DataTable.js","actions/index.js","components/LotConsole.js","ParkingLot.js","registerServiceWorker.js","reducers/index.js","index.js"],"names":["EntryForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeHandler","e","name","target","value","parseInt","onChange","submitHandler","er","total_slots","isNaN","filled","populateLot","setState","error","state","react_default","a","createElement","className","type","onClick","Component","AddForm","_Component","defineProperty","toUpperCase","regis","match","colour","onSubmit","inherits","createClass","key","available","duplicate_err","placeholder","DataRow","data","registration","color","slot","Filters","filterVals","rfil","cfil","alue","sfil","TableWrapper","children","DataTable","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","filterHandler","n","getFilter","_this2","filters","filter","val","includes","rows","map","item","DataTable_DataRow","removeBtnHandler","DataTable_TableWrapper","DataTable_Filters","changeInput","field","populateData","clearSlot","slotId","addNew","reg","updateFilter","LotConsole","mapTableData","lot","vehicles","available_slots","regfilter","colorfilter","slotfilter","mapTableActions","dispatch","slotID","DataTableStore","connect","ParkingLot","mapFormState","mapFormActions","addFormData","dup_err","addFormActions","EntryStore","AddStore","LotConsole_LotConsole","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","initialize","colors","checkExists","result","i","getRandom","Math","floor","random","parking_lot","undefined","action","assign","s","push","records","cars","getRegistration","num","toString","area","chars","code","generateData","toConsumableArray","sort","m","_state$available_slot","toArray","slice","store","createStore","parkingStore","ReactDOM","render","es","ParkingLot_ParkingLot","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.90e0ae37.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Entryform.css'\r\nexport default class EntryForm extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {error:''};\r\n\t}\r\n\r\n\tchangeHandler = (e) => {\r\n\t\tlet name = e.target.name;\r\n\t\tlet value = (e.target.value === '') ? '': parseInt(e.target.value, 10);\r\n\t\tthis.props.onChange(name, value);\r\n\t}\r\n\r\n\tsubmitHandler = () => {\r\n\r\n\t\tlet er = '';\r\n\t\tif(this.props.total_slots !== '')\r\n\t\t\tif(!isNaN(this.props.total_slots))\r\n\t\t\t\tif(!isNaN(this.props.filled))\r\n\t\t\t\t\tif(this.props.filled <= this.props.total_slots)\r\n\t\t\t\t\t\tthis.props.populateLot();\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\ter = 'Cars cannot be more than slots.';\r\n\t\t\t\telse\r\n\t\t\t\t\ter = 'Enter correct value for initial cars.';\r\n\t\t\telse\r\n\t\t\t\ter = 'Enter correct value for total slots';\r\n\t\telse\r\n\t\t\ter = 'Enter total number of parking slots';\r\n\r\n\t\tthis.setState({error:er});\r\n\r\n\t}\r\n/* THIS COMPONENT THAT YOU CAN PUT THE VALUE AND CLICK THE GENERATE BUTTON */\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"entry-block\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<label className=\"col-5\"><span className=\"col-6\">Total Parking Slots: </span><input className=\"col-6\" type=\"number\" name=\"total_slots\" onChange={this.changeHandler} value={this.props.total_slots} /></label>\r\n\t\t\t\t\t<label className=\"col-4\"><span className=\"col-6\">Initial Cars: </span><input type=\"number\" className=\"col-6\" name=\"filled\" onChange={this.changeHandler} value={this.props.filled } /></label>\r\n\t\t\t\t\t<div className=\"col-3\"><button className=\"btn btn-success\" onClick={this.submitHandler}>Generate</button></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"error ml-3 mt-2\">{this.state.error}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport './AddForm.css';\r\nexport class AddForm extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {regis:'', colour:'', er:''};\r\n\t}\r\n\r\n\tchangeHandler = (e) => {\r\n\t\tthis.setState({[e.target.name]: e.target.value.toUpperCase()});\r\n\t}\r\n\r\n\tsubmitHandler = () => {\r\n\r\n\t\tlet er = '';\r\n\t\tif (this.state.regis.match(/^[A-Z]{2}-\\d{2}-[A-Z]{2}-[1-9]\\d{3}$/))\r\n\t\t\tif(this.state.colour.match(/[A-Za-z]+/)){\r\n\t\t\t\tthis.props.onSubmit(this.state.regis, this.state.colour);\r\n\t\t\t\tthis.setState({regis:'', colour:''});\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ter = \"Enter correct colour value\";\r\n\t\telse\r\n\t\t\ter = \"Enter registration number in correct format - AB-12-XY-1234\";\r\n\r\n\t\tthis.setState({error:er});\r\n\t}\r\n\r\n\trender() {\r\n/* THIS COMPONENT TRIGGERED WHEN YOU CLICKED THE ADD BUTTON */\r\n\t\tif(this.props.available > 0)\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"add-block row\">\r\n\t\t\t\t\t<div className=\"col-12 h4 \">Available space: {this.props.available}</div>\r\n\t\t\t\t\t<div className=\"error\">{this.state.error}</div>\r\n\t\t\t\t\t<div className=\"error\">{(this.state.error === '' && this.props.duplicate_err)? \"This Registration number already exist. Please enter correct number.\": \"\"}</div>\r\n\t\t\t\t\t<div className=\"row ml-4\">\r\n\t\t\t\t\t\t<label className=\"col-5\"><span className=\"col-6 regNO\">Registration No:</span><input className=\"regsPh\" type=\"text\" name=\"regis\" placeholder=\"AB-12-XY-1234\" value={this.state.regis} onChange={this.changeHandler}/></label>\r\n\t\t\t\t\t\t<label className=\"col-4\"><span className=\"col-4\">Color:</span><input className=\"col-7\" type=\"text\" name=\"colour\" value={this.state.colour} onChange={this.changeHandler}/></label>\r\n\t\t\t\t\t\t<div className=\"col-3\"><button className=\"btn btn-sm btn-success\" onClick={this.submitHandler}>Add</button></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport default AddForm;","import React, { Component } from 'react';\r\nimport './DataTable.css'\r\n\t\t\t/* THIS IS THE VALUE OR OUTPUT WHEN YOU CLICKED THE GENERATE BUTTON */\r\n\tconst DataRow = (props) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"row table-row\">\r\n\t\t\t\t\t\t<div className=\"col-4\">{props.data.registration}</div>\r\n\t\t\t\t\t\t<div className=\"col-4\">{props.data.color}</div>\r\n\t\t\t\t\t\t<div className=\"col-2\">{props.data.slot}</div> \t\r\n\t\t\t\t\t\t<div className=\"col-2\"><button className=\"btn btn-sm btn-danger\" \r\n\t\t\t\t\t\tonClick={() => props.onClick(props.data.slot)}>Exit</button></div> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/* AND YOU CAN EXIT THE VEHICLE BY CLICKING THE EXIT BUTTON */\r\nconst Filters = (props) => {\r\n\treturn (\r\n\t\t\t<div className=\"row filters\">\r\n\t\t\t\t<div className=\"col-4\"><input type=\"text\" \r\n\t\t\t\tname=\"regfilter\" \r\n\t\t\t\tonChange={props.onChange} \r\n\t\t\t\tvalue={props.filterVals.rfil}/>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-4\"><input type=\"text\" \r\n\t\t\t\tname=\"colorfilter\" \r\n\t\t\t\tonChange={props.onChange} \r\n\t\t\t\tvalue={props.filterVals.cfil}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-2\"><input type=\"number\" \r\n\t\t\t\tname=\"slotfilter\" \r\n\t\t\t\tonChange={props.onChange} \r\n\t\t\t\talue={props.filterVals.sfil}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-2\"></div>\r\n\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tconst TableWrapper = (props) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"data-table\">\r\n\t\t\t\t\t\t<div className=\"row table-header\">\r\n\t\t\t\t\t\t\t<div className=\"col-4 h4\">Registration Number</div>\r\n\t\t\t\t\t\t\t<div className=\"col-4 h4\">Color</div>\r\n\t\t\t\t\t\t\t<div className=\"col-4 h4\">Slot</div>\r\n\t\t\t\t\t\t\t<div className=\"col-2 h4\"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t{props.children}\r\n\t\t\t\t\t\t<div className=\"row table-footer\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t\texport class DataTable extends Component {\r\n\t\t\t\tfilterHandler = (e) => {\r\n\t\t\t\t\tif(e.target.name === 'slotfilter'){\r\n\t\t\t\t\t\tlet n = (e.target.value === '') ? '': parseInt(e.target.value, 10);\r\n\t\t\t\t\t\tthis.props.getFilter('slotfilter', n);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis.props.getFilter(e.target.name, e.target.value.toUpperCase());\r\n\t\t\t\t}\r\n\r\n\t\t\t\trender() {\r\n\t\t\t\t\tif(this.props.data.length > 0){\r\n\t\t\t\t\t\tlet data = this.props.data;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata = (this.props.filters.rfil === '') ?  data : data.filter(val => { \r\n\t\t\t\t\t\t\t\treturn val.registration.includes(this.props.filters.rfil);\t\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tdata = (this.props.filters.cfil === '') ?  data : data.filter(val => { \r\n\t\t\t\t\t\t\t\treturn val.color.includes(this.props.filters.cfil);\t\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tdata = (this.props.filters.sfil === '') ?  data : data.filter(val => { \r\n\t\t\t\t\t\t\t\treturn this.props.filters.sfil === val.slot;\t\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tconst rows = data.map(item => {\r\n\t\t\t\t\t\t\treturn <DataRow key={item.slot} data={item} onClick={this.props.removeBtnHandler}/>\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t<TableWrapper>\r\n\t\t\t\t\t\t\t\t<Filters filterVals={this.props.filters} onChange={this.filterHandler}/>\r\n\t\t\t\t\t\t\t\t{rows}\r\n\t\t\t\t\t\t\t\t</TableWrapper>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className=\"m-5 p-5 pull-center\">\r\n\t\t\t\t\t\t\t\t<div className=\"h3 justify-content-center\">No Parking</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\texport default DataTable;","/* THIS IS THE EXAMPLE DATA */\r\nexport const changeInput = (name,value) => {\r\n\treturn {\r\n\t\ttype: 'UPDATE_FORM',\r\n\t\tfield: {name, value}\r\n\t}\r\n}\r\n\r\nexport const populateData = () => {\r\n\treturn{\r\n\t\ttype: 'POPULATE'\r\n\t}\r\n}\r\n\r\nexport const clearSlot = (slotId) => {\r\n\treturn{\r\n\t\ttype: 'CLEAR_SLOT',\r\n\t\tslotId\r\n\t}\r\n}\r\n\r\nexport const addNew = (reg, colour) => {\r\n\treturn{\r\n\t\ttype: 'ADD_NEW',\r\n\t\treg,\r\n\t\tcolour\r\n\t}\r\n}\r\n\r\nexport const updateFilter = (name, val) => {\r\n\treturn{\r\n\t\ttype: 'UPDATE_FILTER',\r\n\t\tfilter: {name, val}\r\n\t}\r\n}","\timport React, { Component } from 'react';\r\n\timport { connect } from 'react-redux';\r\n\timport DataTable from './DataTable';\r\n\timport { clearSlot, updateFilter } from '../actions';\r\n\r\n\texport default class LotConsole extends Component {\r\n/* THIS IS THE DATA TABLE OR COMPONENT  */\r\n\t\tmapTableData = (lot) => {\r\n\t\t\treturn {\r\n\t\t\t\tdata: lot.vehicles,\r\n\t\t\t\tavailable: lot.available_slots.length,\r\n\t\t\t\tfilters: {rfil:lot.regfilter, cfil:lot.colorfilter, sfil: lot.slotfilter}\r\n\t\t\t}\r\n\t\t}\r\n/* GETTING THE DATA IR THE ID  */\r\n\t\tmapTableActions = (dispatch) => {\r\n\t\t\treturn {\r\n\t\t\t\tremoveBtnHandler: (slotID) => {dispatch(clearSlot(slotID))},\r\n\t\t\t\tgetFilter: (name, value) => {dispatch(updateFilter(name, value))}\r\n\t\t\t}\r\n\t\t}\r\n\t\trender() {\r\n\t\t\tconst DataTableStore = connect(this.mapTableData, this.mapTableActions)(DataTable);\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"console\">\r\n\t\t\t\t\t<DataTableStore />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ParkingLot.css';\r\nimport EntryForm from './components/EntryForm';\r\nimport AddForm from './components/AddForm';\r\nimport LotConsole from './components/LotConsole';\r\nimport { changeInput, populateData, addNew } from './actions';\r\n\r\n\r\nexport default class ParkingLot extends Component {\r\n\r\n\tmapFormState = (lot) => {\r\n\t\treturn {total_slots: lot.total_slots,\r\n\t\t\t\tfilled : lot.filled\r\n\t\t\t}\r\n\t}\r\n\r\n\tmapFormActions = (dispatch) => {\r\n\t\treturn {\r\n\t\t\tonChange: (name, value) => {dispatch(changeInput(name,value))},\r\n\t\t\tpopulateLot: () => {dispatch(populateData())}\r\n\t\t}\r\n\t}\r\n\r\n\taddFormData = (lot) => {\r\n\t\treturn{\r\n\t\t\tduplicate_err:lot.dup_err,\r\n\t\t\tavailable: lot.available_slots.length\r\n\t\t}\r\n\t}\r\n\r\n\taddFormActions = (dispatch) => {\r\n\t\treturn {\r\n\t\t\tonSubmit: (reg, colour) => { dispatch(addNew(reg, colour))}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst EntryStore =  connect(this.mapFormState, this.mapFormActions)(EntryForm);\r\n\t\tconst AddStore = connect(this.addFormData, this.addFormActions)(AddForm);\r\n\t\treturn (\r\n\t\t\t<div className=\"main container-fluid\">\r\n\t\t\t\t<header className=\"nav navbar justify-content-center fonxl\">\r\n\t\t\t\t\t<h1 className=\"display-1\"><strong>Parking Lot</strong></h1>\r\n\t\t\t\t</header>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"content container\">\r\n\t\t\t\t\t<EntryStore />\r\n\t\t\t\t\t<AddStore />\r\n\t\t\t\t\t<LotConsole />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n","\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\n\tconst initialize = { total_slots:'',\r\n\t\t\t\t\t\tfilled: '',\r\n\t\t\t\t\t\tcolors: ['BLACK', 'WHITE', 'BLUE', 'RED'],\r\n\t\t\t\t\t\tvehicles: [],\r\n\t\t\t\t\t\tavailable_slots: [],\r\n\t\t\t\t\t\tdup_err:0,\r\n\t\t\t\t\t\tregfilter:'',\r\n\t\t\t\t\t\tcolorfilter:'',\r\n\t\t\t\t\t\tslotfilter:''};\r\n\r\n/* THIS COMPONENT THAT CAN UPDATE, DELETE, ADD THE VALUE OR THE ID*/\r\n\tconst parking_lot = (state=initialize, action) => {\r\n\t\tswitch(action.type){\r\n\t\t\tcase 'UPDATE_FORM':\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\t[action.field.name] : action.field.value\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\tcase 'POPULATE':\r\n\t\t\t\tlet s = [];\r\n\t\t\t\tfor (let i = state.filled+1; i <= state.total_slots; i++) {\r\n\t\t\t\t\ts.push(i);\r\n\t\t\t\t}\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tvehicles:generateData(state.filled, state.colors),\r\n\t\t\t\tavailable_slots:s \r\n\t\t\t\t});\r\n\r\n\t\t\tcase 'CLEAR_SLOT':\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\tvehicles: state.vehicles.filter( item => {\r\n\t\t\t\t\t\treturn item.slot !== action.slotId\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tfilled: state.filled-1,\r\n\t\t\t\t\tavailable_slots: [...state.available_slots, action.slotId].sort((m,n) => {return m-n})\r\n\t\t\t\t});\r\n\r\n\t\t\tcase 'ADD_NEW':\r\n\t\t\t\tif(!checkExists(state.vehicles, action.reg)){\r\n\t\t\t\t\tlet [slot, ...available] = state.available_slots;\r\n\t\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\t\tvehicles: [{slot,registration: action.reg, color:action.colour}, ...state.vehicles],\r\n\t\t\t\t\t\tavailable_slots: available,\r\n\t\t\t\t\t\tfilled: state.filled+1,\r\n\t\t\t\t\t\tdup_err: 0\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\t\tdup_err:1\r\n\t\t\t\t\t});\r\n\r\n\t\t\tcase 'UPDATE_FILTER':\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\t[action.filter.name]: action.filter.val\r\n\t\t\t\t});\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction generateData(records, colors){\r\n\r\n\t\tlet cars = [];\r\n\t\t\r\n\t\tlet getRegistration = () => {\r\n\r\n\t\t\tlet reg;\r\n\t\t\tdo{\r\n\t\t\treg = 'KA-';\r\n\t\t\tlet area = () => {\r\n\t\t\t\tlet num = getRandom(21);\r\n\t\t\t\treturn (num > 9) ? num.toString() : '0'+num.toString();\r\n\t\t\t}\r\n\r\n\t\t\tlet code = () => {\r\n\t\t\t\tlet chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\t\t\t\treturn chars[getRandom(chars.length)]+chars[getRandom(chars.length)];\r\n\t\t\t}\r\n\r\n\t\t\tlet num = (getRandom(9)+1).toString()+getRandom(10).toString()+getRandom(10).toString()+getRandom(10).toString();\r\n\t\t\treg += area()+'-'+code()+'-'+num;\r\n\t\t\t}while(checkExists(cars, reg));\r\n\r\n\t\t\treturn reg;\r\n\t\t}\r\n\r\n\t\tfor (let i=1; i<=records; i++){\r\n\t\t\tcars.push({slot:i,\r\n\t\t\t\t\t\tregistration: getRegistration(),\r\n\t\t\t\t\t\tcolor:colors[getRandom(colors.length)]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn cars;\r\n\t}\r\n\r\n\r\n\tfunction checkExists(data, key){\r\n\r\n\t\t\tlet result = false;\r\n\t\t\tfor (let i = 0; i < data.length; i++){\r\n\r\n\t\t\t\tif (data[i].registration === key){\r\n\t\t\t\t\tresult = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\tfunction getRandom(length){\r\n\r\n\t\treturn Math.floor(Math.random()*length);\r\n\t}\r\n\r\n\texport default parking_lot;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ParkingLot from './ParkingLot';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport parkingStore from './reducers';\r\n\r\nconst store = createStore(parkingStore);\r\n\r\nReactDOM.render(<Provider store={store}>\r\n\t\t\t\t\t<ParkingLot />\r\n\t\t\t\t</Provider>, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}