{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\src\\\\components\\\\LotConsole.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DataTable from './DataTable';\nimport { clearSlot, updateFilter } from '../actions';\n\nvar LotConsole =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LotConsole, _Component);\n\n  function LotConsole() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LotConsole);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LotConsole)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.mapTableData = function (lot) {\n      return {\n        data: lot.vehicles,\n        available: lot.available_slots.length,\n        filters: {\n          rfil: lot.regfilter,\n          cfil: lot.colorfilter,\n          sfil: lot.slotfilter\n        }\n      };\n    };\n\n    _this.mapTableActions = function (dispatch) {\n      return {\n        removeBtnHandler: function removeBtnHandler(slotID) {\n          dispatch(clearSlot(slotID));\n        },\n        getFilter: function getFilter(name, value) {\n          dispatch(updateFilter(name, value));\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(LotConsole, [{\n    key: \"render\",\n    value: function render() {\n      var DataTableStore = connect(this.mapTableData, this.mapTableActions)(DataTable);\n      return React.createElement(\"div\", {\n        className: \"console\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(DataTableStore, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LotConsole;\n}(Component);\n\nexport { LotConsole as default };","map":{"version":3,"sources":["C:\\Users\\jgodi\\parkinglotexam\\parkinglot-exam\\src\\components\\LotConsole.js"],"names":["React","Component","connect","DataTable","clearSlot","updateFilter","LotConsole","mapTableData","lot","data","vehicles","available","available_slots","length","filters","rfil","regfilter","cfil","colorfilter","sfil","slotfilter","mapTableActions","dispatch","removeBtnHandler","slotID","getFilter","name","value","DataTableStore"],"mappings":";;;;;;AAAC,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,YAAxC;;IAEqBC,U;;;;;;;;;;;;;;;;;;UAEpBC,Y,GAAe,UAACC,GAAD,EAAS;AACvB,aAAO;AACNC,QAAAA,IAAI,EAAED,GAAG,CAACE,QADJ;AAENC,QAAAA,SAAS,EAAEH,GAAG,CAACI,eAAJ,CAAoBC,MAFzB;AAGNC,QAAAA,OAAO,EAAE;AAACC,UAAAA,IAAI,EAACP,GAAG,CAACQ,SAAV;AAAqBC,UAAAA,IAAI,EAACT,GAAG,CAACU,WAA9B;AAA2CC,UAAAA,IAAI,EAAEX,GAAG,CAACY;AAArD;AAHH,OAAP;AAKA,K;;UAEDC,e,GAAkB,UAACC,QAAD,EAAc;AAC/B,aAAO;AACNC,QAAAA,gBAAgB,EAAE,0BAACC,MAAD,EAAY;AAACF,UAAAA,QAAQ,CAAClB,SAAS,CAACoB,MAAD,CAAV,CAAR;AAA4B,SADrD;AAENC,QAAAA,SAAS,EAAE,mBAACC,IAAD,EAAOC,KAAP,EAAiB;AAACL,UAAAA,QAAQ,CAACjB,YAAY,CAACqB,IAAD,EAAOC,KAAP,CAAb,CAAR;AAAoC;AAF3D,OAAP;AAIA,K;;;;;;;6BACQ;AACR,UAAMC,cAAc,GAAG1B,OAAO,CAAC,KAAKK,YAAN,EAAoB,KAAKc,eAAzB,CAAP,CAAiDlB,SAAjD,CAAvB;AACA,aACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAKA;;;;EAvBsCF,S;;SAAnBK,U","sourcesContent":["\timport React, { Component } from 'react';\r\n\timport { connect } from 'react-redux';\r\n\timport DataTable from './DataTable';\r\n\timport { clearSlot, updateFilter } from '../actions';\r\n\r\n\texport default class LotConsole extends Component {\r\n/* THIS IS THE DATA TABLE OR COMPONENT  */\r\n\t\tmapTableData = (lot) => {\r\n\t\t\treturn {\r\n\t\t\t\tdata: lot.vehicles,\r\n\t\t\t\tavailable: lot.available_slots.length,\r\n\t\t\t\tfilters: {rfil:lot.regfilter, cfil:lot.colorfilter, sfil: lot.slotfilter}\r\n\t\t\t}\r\n\t\t}\r\n/* GETTING THE DATA IR THE ID  */\r\n\t\tmapTableActions = (dispatch) => {\r\n\t\t\treturn {\r\n\t\t\t\tremoveBtnHandler: (slotID) => {dispatch(clearSlot(slotID))},\r\n\t\t\t\tgetFilter: (name, value) => {dispatch(updateFilter(name, value))}\r\n\t\t\t}\r\n\t\t}\r\n\t\trender() {\r\n\t\t\tconst DataTableStore = connect(this.mapTableData, this.mapTableActions)(DataTable);\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"console\">\r\n\t\t\t\t\t<DataTableStore />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n"]},"metadata":{},"sourceType":"module"}