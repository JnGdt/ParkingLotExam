{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jgodi\\\\parkinglotexam\\\\parkinglot-exam\\\\src\\\\ParkingLot.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ParkingLot.css';\nimport EntryForm from './components/EntryForm';\nimport AddForm from './components/AddForm';\nimport LotConsole from './components/LotConsole';\nimport { changeInput, populateData, addNew } from './actions';\n\nvar ParkingLot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ParkingLot, _Component);\n\n  function ParkingLot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ParkingLot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ParkingLot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.mapFormState = function (lot) {\n      return {\n        total_slots: lot.total_slots,\n        filled: lot.filled\n      };\n    };\n\n    _this.mapFormActions = function (dispatch) {\n      return {\n        onChange: function onChange(name, value) {\n          dispatch(changeInput(name, value));\n        },\n        populateLot: function populateLot() {\n          dispatch(populateData());\n        }\n      };\n    };\n\n    _this.addFormData = function (lot) {\n      return {\n        duplicate_err: lot.dup_err,\n        available: lot.available_slots.length\n      };\n    };\n\n    _this.addFormActions = function (dispatch) {\n      return {\n        onSubmit: function onSubmit(reg, colour) {\n          dispatch(addNew(reg, colour));\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(ParkingLot, [{\n    key: \"render\",\n    value: function render() {\n      var EntryStore = connect(this.mapFormState, this.mapFormActions)(EntryForm);\n      var AddStore = connect(this.addFormData, this.addFormActions)(AddForm);\n      return React.createElement(\"div\", {\n        className: \"main container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"nav navbar justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Parking Lot\"), React.createElement(\"div\", {\n        className: \"content container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(EntryStore, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(AddStore, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(LotConsole, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ParkingLot;\n}(Component);\n\nexport { ParkingLot as default };","map":{"version":3,"sources":["C:\\Users\\jgodi\\parkinglotexam\\parkinglot-exam\\src\\ParkingLot.js"],"names":["React","Component","connect","EntryForm","AddForm","LotConsole","changeInput","populateData","addNew","ParkingLot","mapFormState","lot","total_slots","filled","mapFormActions","dispatch","onChange","name","value","populateLot","addFormData","duplicate_err","dup_err","available","available_slots","length","addFormActions","onSubmit","reg","colour","EntryStore","AddStore"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,kBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,MAApC,QAAkD,WAAlD;;IAGqBC,U;;;;;;;;;;;;;;;;;;UAEpBC,Y,GAAe,UAACC,GAAD,EAAS;AACvB,aAAO;AAACC,QAAAA,WAAW,EAAED,GAAG,CAACC,WAAlB;AACLC,QAAAA,MAAM,EAAGF,GAAG,CAACE;AADR,OAAP;AAGA,K;;UAEDC,c,GAAiB,UAACC,QAAD,EAAc;AAC9B,aAAO;AACNC,QAAAA,QAAQ,EAAE,kBAACC,IAAD,EAAOC,KAAP,EAAiB;AAACH,UAAAA,QAAQ,CAACT,WAAW,CAACW,IAAD,EAAMC,KAAN,CAAZ,CAAR;AAAkC,SADxD;AAENC,QAAAA,WAAW,EAAE,uBAAM;AAACJ,UAAAA,QAAQ,CAACR,YAAY,EAAb,CAAR;AAAyB;AAFvC,OAAP;AAIA,K;;UAEDa,W,GAAc,UAACT,GAAD,EAAS;AACtB,aAAM;AACLU,QAAAA,aAAa,EAACV,GAAG,CAACW,OADb;AAELC,QAAAA,SAAS,EAAEZ,GAAG,CAACa,eAAJ,CAAoBC;AAF1B,OAAN;AAIA,K;;UAEDC,c,GAAiB,UAACX,QAAD,EAAc;AAC9B,aAAO;AACNY,QAAAA,QAAQ,EAAE,kBAACC,GAAD,EAAMC,MAAN,EAAiB;AAAEd,UAAAA,QAAQ,CAACP,MAAM,CAACoB,GAAD,EAAMC,MAAN,CAAP,CAAR;AAA8B;AADrD,OAAP;AAGA,K;;;;;;;6BAEQ;AAER,UAAMC,UAAU,GAAI5B,OAAO,CAAC,KAAKQ,YAAN,EAAoB,KAAKI,cAAzB,CAAP,CAAgDX,SAAhD,CAApB;AACA,UAAM4B,QAAQ,GAAG7B,OAAO,CAAC,KAAKkB,WAAN,EAAmB,KAAKM,cAAxB,CAAP,CAA+CtB,OAA/C,CAAjB;AACA,aACC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAQ,QAAA,SAAS,EAAC,mCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAIA;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAGC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CAJA,CADD,CADD;AAcA;;;;EA9CsCH,S;;SAAnBQ,U","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ParkingLot.css';\r\nimport EntryForm from './components/EntryForm';\r\nimport AddForm from './components/AddForm';\r\nimport LotConsole from './components/LotConsole';\r\nimport { changeInput, populateData, addNew } from './actions';\r\n\r\n\r\nexport default class ParkingLot extends Component {\r\n\r\n\tmapFormState = (lot) => {\r\n\t\treturn {total_slots: lot.total_slots,\r\n\t\t\t\tfilled : lot.filled\r\n\t\t\t}\r\n\t}\r\n\r\n\tmapFormActions = (dispatch) => {\r\n\t\treturn {\r\n\t\t\tonChange: (name, value) => {dispatch(changeInput(name,value))},\r\n\t\t\tpopulateLot: () => {dispatch(populateData())}\r\n\t\t}\r\n\t}\r\n\r\n\taddFormData = (lot) => {\r\n\t\treturn{\r\n\t\t\tduplicate_err:lot.dup_err,\r\n\t\t\tavailable: lot.available_slots.length\r\n\t\t}\r\n\t}\r\n\r\n\taddFormActions = (dispatch) => {\r\n\t\treturn {\r\n\t\t\tonSubmit: (reg, colour) => { dispatch(addNew(reg, colour))}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst EntryStore =  connect(this.mapFormState, this.mapFormActions)(EntryForm);\r\n\t\tconst AddStore = connect(this.addFormData, this.addFormActions)(AddForm);\r\n\t\treturn (\r\n\t\t\t<div className=\"main container-fluid\">\r\n\t\t\t\t<header className=\"nav navbar justify-content-center\">\r\n\t\t\t\t\t<h1>Parking Lot</h1>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"content container\">\r\n\t\t\t\t\t<EntryStore />\r\n\t\t\t\t\t<AddStore />\r\n\t\t\t\t\t<LotConsole />\r\n\t\t\t\t</div>\r\n\t\t\t\t</header>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}